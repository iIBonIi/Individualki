#include <iostream>
#include <fstream>
#include <string>
#include <thread>
#include <chrono>
#include <mutex>

std::mutex mtx; // Мьютекс для защиты доступа к консоли

void sendImt(double imt) {
    // Отправка ИМТ на сервер в файл
    std::ofstream ofs("imt.txt");
    if (ofs.is_open()) {
        ofs << imt;
        ofs.close();
        std::cout << "ИМТ " << imt << " успешно отправлен на сервер." << std::endl;
    } else {
        std::cout << "Ошибка при открытии файла для записи." << std::endl;
    }
}

void readResponse() {
    std::string response;
    
    // Чтение ответа от сервера из файла
    while (true) {
        std::this_thread::sleep_for(std::chrono::seconds(1)); // Простая задержка перед проверкой

        std::ifstream ifs("response.txt");
        if (ifs.is_open()) {
            std::getline(ifs, response);
            if (!response.empty()) {
                mtx.lock();
                std::cout << "Ответ от сервера: " << response << std::endl;
                mtx.unlock();
                ifs.close();
                break; // Выходим из цикла после получения ответа
            }
            ifs.close();
        }
    }
}

int main() {
    double imt;

    // Запрашиваем ИМТ у пользователя
    std::cout << "Введите ваш ИМТ: ";
    std::cin >> imt;

    // Запускаем новые потоки для отправки ИМТ и чтения ответа
    std::thread sender(sendImt, imt);
    std::thread responder(readResponse);

    sender.join(); // Ждем завершения отправки
    responder.join(); // Ждем завершения чтения ответа

    return 0;
}