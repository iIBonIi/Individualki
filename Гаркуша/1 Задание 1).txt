#include <iostream>
#include <fstream>
#include <string>
#include <thread>
#include <chrono>

size_t getFileSize(const std::string& filename) {
    std::ifstream file(filename, std::ios::binary | std::ios::ate);
    return file.tellg();
}

void processRequest(const std::string& request, std::string& response) {
    // Пример обработки запроса
    response = "Ответ на: " + request;
}

void writeResponseToFile(const std::string& filename, const std::string& response) {
    std::ofstream file(filename, std::ios::app);  // Открытие файла для дозаписи
    if (file.is_open()) {
        file << response << std::endl;
        file.close();
    }
    else {
        std::cerr << "Не удалось открыть файл для записи!" << std::endl;
    }
}

int main() {
    const std::string requestFile = "f1.txt";
    const std::string responseFile = "f2.txt";
    size_t lastFileSize = 0;

    while (true) {
        size_t currentFileSize = getFileSize(requestFile);

        if (currentFileSize > lastFileSize) {
            // В файле f1 появился новый запрос
            std::ifstream file(requestFile);
            file.seekg(lastFileSize);  // Переход в конец предыдущего запроса

            std::string request;
            std::getline(file, request);
            file.close();

            // Обработка запроса
            std::string response;
            processRequest(request, response);

            // Запись ответа в файл f2
            writeResponseToFile(responseFile, response);

            // Обновление размера файла
            lastFileSize = currentFileSize;
        }

        std::this_thread::sleep_for(std::chrono::seconds(1));
    }
}
