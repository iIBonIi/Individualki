#include <iostream>
#include <iomanip>

using namespace std;

void gaussianElimination(double** matrix, int n) {
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            double ratio = matrix[j][i] / matrix[i][i];
            for (int k = 0; k < n + 1; k++) {
                matrix[j][k] -= ratio * matrix[i][k];
            }
        }
    }
}

void backSubstitution(double** matrix, double* solution, int n) {
    for (int i = n - 1; i >= 0; i--) {
        solution[i] = matrix[i][n];
        for (int j = i + 1; j < n; j++) {
            solution[i] -= matrix[i][j] * solution[j];
        }
        solution[i] /= matrix[i][i];
    }
}

int main() {
    int n;
    cout << "Введите размерность матрицы: ";
    cin >> n;
    double** matrix = new double*[n];
    for (int i = 0; i < n; i++) {
        matrix[i] = new double[n + 1];
    }
    cout << "Введите коэффициенты матрицы:\n";
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n + 1; j++) {
            cin >> matrix[i][j];
        }
    }
    gaussianElimination(matrix, n);
    double* solution = new double[n];
    backSubstitution(matrix, solution, n);
    cout << "Решение:\n";
    for (int i = 0; i < n; i++) {
        cout << "x" << i + 1 << " = " << fixed << setprecision(6) << solution[i] << endl;
    }
    for (int i = 0; i < n; i++) {
        delete[] matrix[i];
    }
    delete[] matrix;
    delete[] solution;
    return 0;
}
